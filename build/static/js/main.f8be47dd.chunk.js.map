{"version":3,"sources":["components/notes/Note.jsx","services/notes.js","components/notes/Notification.jsx","components/notes/Notes.jsx","index.js"],"names":["Note","note","toogleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Notes","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changeNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAEaA,EAAO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACrBC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCPpCK,EAAU,wDAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa9B,EAVA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCfhCK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAgB,OAAZA,EACK,KAGF,qBAAKd,UAAU,QAAf,SAAwBc,KCGpBC,G,MAAQ,WAAO,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,OAEKF,mBAAS,cAFd,mBAElBG,EAFkB,KAETC,EAFS,OAGKJ,oBAAS,GAHd,mBAGlBK,EAHkB,KAGTC,EAHS,OAIeN,mBAAS,MAJxB,mBAIlBO,EAJkB,KAIJC,EAJI,KAMzBC,qBAAU,WACRC,IAAqBpB,MAAK,SAACqB,GACzBT,EAASS,QAEV,IAEH,IAsCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAACjC,GAAD,OAAUA,EAAKG,aAElE,OACE,gCACE,uCACA,cAAC,EAAD,CAAce,QAASS,IACvB,8BACE,yBAAQrB,QAAS,kBAAMoB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAClC,EAAMmC,GAAP,OACf,cAAC,EAAD,CAEEnC,KAAMA,EACNC,iBAAkB,kBAtDD,SAACc,GAC1B,IAAMf,EAAOqB,EAAMe,MAAK,SAACC,GAAD,OAAOA,EAAEtB,KAAOA,KAClCuB,EAAU,2BAAQtC,GAAR,IAAcG,WAAYH,EAAKG,YAE/C2B,EACUf,EAAIuB,GACX5B,MAAK,SAAC6B,GACLjB,EAASD,EAAMa,KAAI,SAAClC,GAAD,OAAWA,EAAKe,KAAOA,EAAKf,EAAOuC,SAEvDC,OAAM,SAACC,GACNb,EAAgB,SAAD,OACJ5B,EAAKK,QADD,sCAGfqC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAACI,GAAD,OAAOA,EAAEtB,KAAOA,SAsCV4B,CAAmB3C,EAAKe,MAF3CoB,QAOX,uBAAMS,SAvCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB1C,QAASkB,EACTyB,MAAM,IAAIC,MAAOC,cACjB/C,UAAWgD,KAAKC,SAAW,IAG7BtB,EAAmBiB,GAAYrC,MAAK,SAAC6B,GACnCjB,EAASD,EAAMgC,OAAOd,IACtBf,EAAW,QA6BX,UACE,uBAAO8B,MAAO/B,EAASgC,SA1BJ,SAACV,GACxBrB,EAAWqB,EAAMW,OAAOF,UA0BpB,wBAAQG,KAAK,SAAb,0BC5ERC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f8be47dd.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Note = ({ note, toogleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toogleImportance}>{label}</button>\n    </li>\n  );\n};\n","import axios from \"axios\";\nconst baseUrl = \"https://intense-retreat-81071.herokuapp.com/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","export const Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { Note } from \"./Note\";\nimport noteService from \"../../services/notes\";\nimport { Notification } from \"./Notification\";\n\nimport \"../../index.css\";\n\nexport const Notes = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changeNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changeNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already deleted from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note\n            key={i}\n            note={note}\n            toogleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Notes } from \"./components/notes/Notes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Notes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}